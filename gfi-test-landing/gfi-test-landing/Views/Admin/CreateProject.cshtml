@model gfi_test_landing.Models.ProjectViewModel


@{


    ViewBag.Title = "Create Project";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("CreateProject", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary("", new { @class = "text-danger" })

    <div class="col-lg-10 offset-1">

        <div class="card">
            <div class="card-header"><h4>Create new project</h4></div>
            <div class="card-body card-block">

                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-addon"><i class="fa fa-edit"></i></div>
                        @Html.TextBoxFor(m => m.ProjectName, new { @class = "form-control", @placeholder = "Name" })
                        @*@Html.ValidationMessageFor(m => m.ProjectName, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-addon"><i class="fa fa-th-list"></i></div>
                        @Html.TextBoxFor(m => m.ProjectDescription, new { @class = "form-control", @placeholder = "Description" })
                        @*@Html.ValidationMessageFor(m => m.ProjectDescription, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                @*@for (int i = 0; i < Model.Components.Count(); i++)
                    {
                        <div class="row form-group">
                            <div class="col col-md-3"><label class=" form-control-label" for="select">Select Project</label></div>
                            <div class="col-12 col-md-9">




                                @Html.HiddenFor(x => x.Components[i].Name)
                                @Model.Components[i].Name
                            </div>
                        </div>
                    }*@
                <div class="form-group">

                    <div class="col"><label class=" form-control-label" for="select">Select the components:</label></div>
                </div>

                <div class="form-group">
                    <div class="row form-group">
                        <div class="col col-md-1"></div>
                        <div class="col col-md-9">
                            @for (int i = 0; i < Model.Components.Count(); i++)
                            {
                                <div class="form-check">
                                    <div class="checkbox">
                                        <label for="checkbox1" class="form-check-label ">
                                            @*<input type="checkbox" id="checkbox(@i)" name=" @Model.Components[i].Name" value=" @Model.Components[i].Id" class="form-check-input">
                                            *@


                                        </label>
                                        @*<input type="checkbox" name="code" aria-describedby="Code" value="@Model.Components[i].Id" />  @Model.Components[i].Name*@
                                        @Html.HiddenFor(m => m.Components[i].Id)
                                        @Html.HiddenFor(m => m.Components[i].Name)
                                        @Html.CheckBoxFor(m => m.Components[i].IsSelected)
                                        @Model.Components[i].Name
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="form-actions form-group">
                    <input type="submit" class="btn btn-success" value="Register" />
                </div>

            </div>
        </div>

    </div>

}
