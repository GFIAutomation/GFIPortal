@model gfi_test_landing.Models.AddUserToProjectViewModel


<div class="form-horizontal">
    @*<hr />*@

    <!-- Message to tell the user -->
    @*<div class="alert alert-light" role="alert">
        Insert users on the project.
    </div>*@
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="justify-content-between">
            <div class="col-md-12">
                @if (ViewBag.Message != null)
                {

                    <div class="alert @ViewBag.Class" id="success-alert">
                        <button type="button" class="close" data-dismiss="alert">x</button>
                        <strong>@ViewBag.Message </strong>
                    </div>



                }
                <div class="card">
                    <div class="card-header"><h4>Add User or Project</h4></div>
                    <div class="card-body card-block">
                        @if (ViewBag.UserName == null)
                        {


                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-addon"><i class="fa fa-user"></i></div>


                                    @Html.DropDownListFor(m => m.DropIdUser,(IEnumerable<SelectListItem>)ViewBag.userList, "--Select User--", new { @class = "form-control", id = "DropUsers" })

                                </div>
                            </div>

                        }


                        @if (ViewBag.UserName != null)
                        {

                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-addon"><i class="fa fa-user"></i></div>

                                    @Html.TextBox("User Name", (string)ViewBag.UserName, new { @disabled = "", @class = "form-control", @placeholder = "Username" })
                                </div>
                            </div>
                        }

                        @if (ViewBag.ProjectName == null)
                        {


                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-addon"><i class="fa fa-folder"></i></div>


                                    @Html.DropDownListFor(m => m.DropIdProject, (IEnumerable<SelectListItem>)ViewBag.projectList, "--Select Project--", new { @class = "form-control" , id="DropProject" })

                                </div>
                            </div>

                        }

                        @if (ViewBag.ProjectName != null)
                        {
                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-addon"><i class="fa fa-folder"></i></div>

                                    @Html.TextBox("Project Name", (String)ViewBag.ProjectName, new { @disabled = "", @class = "form-control", @placeholder = "Username" })
                                </div>
                            </div>
                        }


                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-addon"><i class="fa fa-users"></i></div>


                                @Html.DropDownListFor(m => m.DropIdRole, (IEnumerable<SelectListItem>)ViewBag.DropRole, "--Select Role--", new { id="DropRole", @class = "form-control" })

                            </div>
                        </div>

                        <div class="form-actions form-group">
                            <input type="submit" id="btnSubmit" style="border-radius:4px;" class="btn btn-success" value="Insert" />
                        </div>
                    </div>
                </div>


            </div>


        </div>
    }


</div>


@Scripts.Render(
    "~/Scripts/jquery-3.3.1.js")

<script>
    $(document).ready(function () {
        $('#success-alert').fadeIn('slow', function () {
            $('#success-alert').delay(5000).fadeOut();
        });
    });

    $(function () {
        $('#DropRole').on('click', function () {
            $('#DropRole option').first().prop("disabled", true);
        });


        $('#DropProject').on('click', function () {
            $('#DropProject option').first().prop("disabled", true);
        });

        $('#DropUsers').on('click', function () {
            $('#DropUsers option').first().prop("disabled", true);
        });

    });

    $(function () {
        $('.form-group .input-group .form-control').on('change', function () {
            var $sels = $('.form-control option:selected[value=""]');
            $("#btnSubmit").attr("disabled", $sels.length > 0);
        }).change();
    });

</script>
